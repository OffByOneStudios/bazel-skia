# This is a basic workflow to help you get started with Actions

  name: CILinux

  on:
    workflow_dispatch:

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
  jobs:
    # This workflow contains a single job called "build"
    build:
      # The type of runner that the job will run on
      runs-on: ubuntu-20.04

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        - name: Checkout skia
          run: git clone https://github.com/google/skia.git

        - name: Install Ninja And Deps
          run: sudo apt-get install -y ninja-build && sudo skia/tools/install_dependencies.sh

        - name: Sync Deps
          working-directory: ./skia
          run: python tools/git-sync-deps
          
        - name: Prepare Workspace
          working-directory: ./skia
          run: |
            mkdir -p out/Build/linux_x86_64
            cp ../linux/args.gn out/Build/args.gn
        
        - name: Run GN
          working-directory: ./skia
          run: bin/gn gen ./out/Build
            
            
        - name: Build Skia
          working-directory: ./skia
          run: ninja -C ./out/Build/
         
        - name: Bundle Artifacts
          working-directory: ./skia
          run: |
            cp -R include ./out/Build/include
            mkdir ./out/Build/modules
            mkdir ./out/Build/modules/particles && cp -R modules/particles/include  ./out/Build/modules/particles/include 
            mkdir ./out/Build/modules/skottie && cp -R modules/skottie/include  ./out/Build/modules/skottie/include
            mkdir ./out/Build/modules/svg && cp -R modules/svg/include  ./out/Build/modules/svg/include

            cp ../BUILD.bazel ./out/Build/BUILD.bazel
            cp ../WORKSPACE ./out/Build/WORKSPACE
            cp -R ../tests ./out/Build/tests

            for i in $(find ./out/Build/include | grep bazel); do rm $i; done
            for i in $(find ./out/Build/modules | grep bazel); do rm $i; done


            rm -rf ./out/Build/obj/
            rm ./out/Build/*ninja*

            mv ./out/Build/*.a ./out/Build/linux_x86_64/
            
        - name: Run Tests
          working-directory: ./skia/out/Build
          run: |
            bazel test ...
            bazel clean
        - uses: actions/upload-artifact@v2
          with:
            name: skia_linux64
            path: skia/out/Build
